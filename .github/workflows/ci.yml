name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-targets --all-features -- -D warnings -A clippy::uninlined-format-args -A clippy::derivable-impls -A clippy::field-reassign-with-default -A dead_code

      - name: Run tests
        run: cargo test --verbose

      - name: Test build
        run: cargo build --release

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        run: cargo install cargo-audit

      - name: Run security audit
        run: cargo audit

  version-check:
    name: Version Consistency
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check version consistency
        run: |
          CARGO_VERSION=$(grep '^version = ' Cargo.toml | head -n1 | sed 's/version = "\(.*\)"/\1/')
          VERSION_FILE=$(cat .version 2>/dev/null || echo "missing")
          
          echo "Cargo.toml version: $CARGO_VERSION"
          echo ".version file: $VERSION_FILE"
          
          if [ "$CARGO_VERSION" != "$VERSION_FILE" ]; then
            echo "ERROR: Version mismatch between Cargo.toml ($CARGO_VERSION) and .version ($VERSION_FILE)"
            exit 1
          fi
          
          echo "âœ… Versions are in sync"