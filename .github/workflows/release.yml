name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  validate:
    name: Pre-release validation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        run: cargo test --verbose

  build:
    name: Build ${{ matrix.name }}
    runs-on: ${{ matrix.runner }}
    needs: validate
    
    strategy:
      matrix:
        include:
          - name: linux-x86_64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use_cross: false
          - name: linux-aarch64
            runner: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            use_cross: true
          - name: macos-x86_64
            runner: macos-latest
            target: x86_64-apple-darwin
            use_cross: false
          - name: macos-aarch64
            runner: macos-latest
            target: aarch64-apple-darwin
            use_cross: false
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target/
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-cargo-

      - name: Install cross (for ARM64 Linux)
        if: matrix.use_cross == true
        run: |
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Build binary
        run: |
          if [ "${{ matrix.use_cross }}" = "true" ]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi

      - name: Prepare binary
        run: |
          mkdir -p upload
          binary_name="claude-code-personalities-${{ matrix.name }}"
          cp target/${{ matrix.target }}/release/claude-code-personalities upload/${binary_name}
          chmod +x upload/${binary_name}
          
          # Generate checksum
          cd upload
          sha256sum ${binary_name} > ${binary_name}.sha256
          
          # Show info
          ls -la
          echo "Binary size: $(du -h ${binary_name} | cut -f1)"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: upload/*

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release files
        run: |
          mkdir -p release
          find artifacts -type f \( -name "claude-code-personalities-*" -o -name "*.sha256" \) -exec cp {} release/ \;
          ls -la release/

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}